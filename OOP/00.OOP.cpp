/*
	POP - Procedual Oriented Programming
	OOP - Object Oriented Programming
*/

/*
	객체지향을 만들기 위해서는
	class
	공통된 변수, 공통된 메서드의 집합

	객체 지향 프로그래밍 임으로 Object가 가장 중요하다.

	객체의 일부라고 볼수 있는것이 Instance이다.

	class = 하나로 구현된 설계도

	Instance = 여러개 일 수 도 있다. 객체에 포함될 수 있다.

*/

/*
	객체지향의 특성을 활용해서 프로그램을 해보자.

	객체지향의 4대 특징

	- 추상화 (Abstraction)
		어떠한 특성만을 가지고서 재조합 하는것을 뜻한다.

	- 캡슐화 (Encapsulation)( 정보 은닉(Information hiding) ) 이 있다.
		객체의 속성이나 동작같은 것 들을 클래스로 묶는것 이다.
		사람별로, 음식별로, 동작별로 묶는 그런것을 이야기함.
		여기서 정보은닉이 나오는데, 사용하는 필요한 정보만 공개하는 것 을 이야기한다.

	- 상속 (Inheritance)
		상위클레스의 속성이나 기능을 물려받는 하위 클레스를 이야기한다.
		재사용과 확장에 관련이 있다.

	- 다형성(Polymorphism)
		하나의 객체가 여러가지의 자료형을 가질 수 있는것 을 다형성 이라고 한다.
		□ 오버로딩
			함수 중 같은 이름을 여러개 사용하는것.
		□ 오버 라이딩
			위에 상위클래스에 있는것 을 하위클레스 에서 다시 재정의 하는것.
*/